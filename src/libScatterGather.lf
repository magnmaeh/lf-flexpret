target C;

preamble {=
  #include "flexpret.h"
=}

reactor Scatter(offset:time = 3 msec, period:time = 1 msec) {
  output out:int
  timer t(offset, period)

  reaction(t) -> out {=
    lf_set(out, 42);
  =}
}

reactor Worker {
  input in:int
  output out:int

  reaction(in) -> out {=
    lf_set(out, in->value);
  =}
}

reactor Gather(n_workers:int=1) {
  input[n_workers] in: int 

  state cnt:int = 0;
  state ts: instant_t*

  reaction(startup) {=
    fp_assert(NUM_THREADS == (self->n_workers), "NUM_THREADS must match workers");
    self->ts = (instant_t *) malloc(10 * sizeof(instant_t));
    
  =}

  reaction(in) {=
    instant_t phy = lf_time_physical();
    instant_t log = lf_time_logical();

    self->ts[self->cnt++] = phy - log;
    if (self->cnt == 10) {
      lf_request_stop();
    }

  =}

  reaction(shutdown) {=
    for (int i = 0; i<10; i++) {
      printf("Result=%lli\n", self->ts[i]);
    }
  =}
}