target C {
    threading: false,
}

import Logger, SensorLaptop, ProcessUnbounded, Actuator from "./libControl.lf"

preamble {=
    #include "../../../src/config.h"
=}

main reactor {
    logical action actuate: int

    log = new Logger(n_iterations = {= CONFIG_ITERATIONS =})

    sensor = new SensorLaptop(n_iterations = {= CONFIG_ITERATIONS =})
    process = new ProcessUnbounded()
    actuator = new Actuator(n_iterations = {= CONFIG_ITERATIONS =})
    
    sensor.ts -> log.ts_sensor
    process.ts -> log.ts_process
    actuator.ts -> log.ts_actuator

    reaction(process.y) -> actuate {=
        lf_schedule(actuate, MSEC(5));
    =}

    reaction(actuate) -> actuator.x {=
        lf_set(actuator.x, 3);
    =}

    reaction(shutdown) {=
        printf("shutdown\n");
    =}

    sensor.y -> process.x
}
